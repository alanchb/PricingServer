//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: ProtoData.proto
namespace Proto.Data
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"DataRow")]
  public partial class DataRow : global::ProtoBuf.IExtensible
  {
    public DataRow() {}
    
    private readonly global::System.Collections.Generic.List<double> _Rows = new global::System.Collections.Generic.List<double>();
    [global::ProtoBuf.ProtoMember(1, Name=@"Rows", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<double> Rows
    {
      get { return _Rows; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"DataMatrix")]
  public partial class DataMatrix : global::ProtoBuf.IExtensible
  {
    public DataMatrix() {}
    
    private readonly global::System.Collections.Generic.List<Proto.Data.DataRow> _Matrix = new global::System.Collections.Generic.List<Proto.Data.DataRow>();
    [global::ProtoBuf.ProtoMember(1, Name=@"Matrix", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Proto.Data.DataRow> Matrix
    {
      get { return _Matrix; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}