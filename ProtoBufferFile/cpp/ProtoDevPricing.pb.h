// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoDevPricing.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProtoDevPricing_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ProtoDevPricing_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProtoDevPricing_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtoDevPricing_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProtoDevPricing_2eproto;
namespace Proto {
namespace DevPricing {
class ProtoDevPricingReq;
struct ProtoDevPricingReqDefaultTypeInternal;
extern ProtoDevPricingReqDefaultTypeInternal _ProtoDevPricingReq_default_instance_;
class ProtoDevPricingRsp;
struct ProtoDevPricingRspDefaultTypeInternal;
extern ProtoDevPricingRspDefaultTypeInternal _ProtoDevPricingRsp_default_instance_;
}  // namespace DevPricing
}  // namespace Proto
PROTOBUF_NAMESPACE_OPEN
template<> ::Proto::DevPricing::ProtoDevPricingReq* Arena::CreateMaybeMessage<::Proto::DevPricing::ProtoDevPricingReq>(Arena*);
template<> ::Proto::DevPricing::ProtoDevPricingRsp* Arena::CreateMaybeMessage<::Proto::DevPricing::ProtoDevPricingRsp>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Proto {
namespace DevPricing {

enum EnumDevType : int {
  Vanilla = 0,
  Sharkfin = 1,
  Sharkfin2 = 2,
  Barrier = 3,
  SnowBall = 10
};
bool EnumDevType_IsValid(int value);
constexpr EnumDevType EnumDevType_MIN = Vanilla;
constexpr EnumDevType EnumDevType_MAX = SnowBall;
constexpr int EnumDevType_ARRAYSIZE = EnumDevType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EnumDevType_descriptor();
template<typename T>
inline const std::string& EnumDevType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EnumDevType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EnumDevType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EnumDevType_descriptor(), enum_t_value);
}
inline bool EnumDevType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EnumDevType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EnumDevType>(
    EnumDevType_descriptor(), name, value);
}
enum EnumBarrierType : int {
  CUO = 0,
  CUI = 1,
  CDO = 2,
  CDI = 3,
  PUO = 4,
  PUI = 5,
  PDO = 6,
  PDI = 7
};
bool EnumBarrierType_IsValid(int value);
constexpr EnumBarrierType EnumBarrierType_MIN = CUO;
constexpr EnumBarrierType EnumBarrierType_MAX = PDI;
constexpr int EnumBarrierType_ARRAYSIZE = EnumBarrierType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EnumBarrierType_descriptor();
template<typename T>
inline const std::string& EnumBarrierType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EnumBarrierType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EnumBarrierType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EnumBarrierType_descriptor(), enum_t_value);
}
inline bool EnumBarrierType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EnumBarrierType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EnumBarrierType>(
    EnumBarrierType_descriptor(), name, value);
}
// ===================================================================

class ProtoDevPricingReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Proto.DevPricing.ProtoDevPricingReq) */ {
 public:
  inline ProtoDevPricingReq() : ProtoDevPricingReq(nullptr) {}
  ~ProtoDevPricingReq() override;
  explicit constexpr ProtoDevPricingReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtoDevPricingReq(const ProtoDevPricingReq& from);
  ProtoDevPricingReq(ProtoDevPricingReq&& from) noexcept
    : ProtoDevPricingReq() {
    *this = ::std::move(from);
  }

  inline ProtoDevPricingReq& operator=(const ProtoDevPricingReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoDevPricingReq& operator=(ProtoDevPricingReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtoDevPricingReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtoDevPricingReq* internal_default_instance() {
    return reinterpret_cast<const ProtoDevPricingReq*>(
               &_ProtoDevPricingReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoDevPricingReq& a, ProtoDevPricingReq& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoDevPricingReq* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoDevPricingReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoDevPricingReq* New() const final {
    return new ProtoDevPricingReq();
  }

  ProtoDevPricingReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoDevPricingReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtoDevPricingReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ProtoDevPricingReq& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoDevPricingReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Proto.DevPricing.ProtoDevPricingReq";
  }
  protected:
  explicit ProtoDevPricingReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDevTypeFieldNumber = 1,
    kDurationFieldNumber = 3,
    kVolatilityFieldNumber = 4,
    kRiskFreeRateFieldNumber = 5,
    kStrikeFieldNumber = 6,
    kS0FieldNumber = 7,
    kS1FieldNumber = 8,
    kExpectedRetFieldNumber = 9,
    kKnockOutRatioFieldNumber = 10,
    kKnockOutRatio2FieldNumber = 11,
    kKnockInRatioFieldNumber = 12,
    kKnockOutReturnFieldNumber = 13,
    kStartObsvDateFieldNumber = 14,
    kMCSamplesFieldNumber = 15,
    kBarrierFieldNumber = 17,
    kISKnockInFieldNumber = 16,
    kBarrierTypeFieldNumber = 18,
    kYearDaysFieldNumber = 2,
  };
  // required .Proto.DevPricing.EnumDevType Dev_Type = 1;
  bool has_dev_type() const;
  private:
  bool _internal_has_dev_type() const;
  public:
  void clear_dev_type();
  ::Proto::DevPricing::EnumDevType dev_type() const;
  void set_dev_type(::Proto::DevPricing::EnumDevType value);
  private:
  ::Proto::DevPricing::EnumDevType _internal_dev_type() const;
  void _internal_set_dev_type(::Proto::DevPricing::EnumDevType value);
  public:

  // required int32 Duration = 3;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::int32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required double Volatility = 4;
  bool has_volatility() const;
  private:
  bool _internal_has_volatility() const;
  public:
  void clear_volatility();
  double volatility() const;
  void set_volatility(double value);
  private:
  double _internal_volatility() const;
  void _internal_set_volatility(double value);
  public:

  // required double RiskFree_Rate = 5;
  bool has_riskfree_rate() const;
  private:
  bool _internal_has_riskfree_rate() const;
  public:
  void clear_riskfree_rate();
  double riskfree_rate() const;
  void set_riskfree_rate(double value);
  private:
  double _internal_riskfree_rate() const;
  void _internal_set_riskfree_rate(double value);
  public:

  // optional double Strike = 6;
  bool has_strike() const;
  private:
  bool _internal_has_strike() const;
  public:
  void clear_strike();
  double strike() const;
  void set_strike(double value);
  private:
  double _internal_strike() const;
  void _internal_set_strike(double value);
  public:

  // optional double S0 = 7;
  bool has_s0() const;
  private:
  bool _internal_has_s0() const;
  public:
  void clear_s0();
  double s0() const;
  void set_s0(double value);
  private:
  double _internal_s0() const;
  void _internal_set_s0(double value);
  public:

  // optional double S1 = 8;
  bool has_s1() const;
  private:
  bool _internal_has_s1() const;
  public:
  void clear_s1();
  double s1() const;
  void set_s1(double value);
  private:
  double _internal_s1() const;
  void _internal_set_s1(double value);
  public:

  // optional double Expected_Ret = 9;
  bool has_expected_ret() const;
  private:
  bool _internal_has_expected_ret() const;
  public:
  void clear_expected_ret();
  double expected_ret() const;
  void set_expected_ret(double value);
  private:
  double _internal_expected_ret() const;
  void _internal_set_expected_ret(double value);
  public:

  // optional double KnockOut_Ratio = 10;
  bool has_knockout_ratio() const;
  private:
  bool _internal_has_knockout_ratio() const;
  public:
  void clear_knockout_ratio();
  double knockout_ratio() const;
  void set_knockout_ratio(double value);
  private:
  double _internal_knockout_ratio() const;
  void _internal_set_knockout_ratio(double value);
  public:

  // optional double KnockOut_Ratio2 = 11;
  bool has_knockout_ratio2() const;
  private:
  bool _internal_has_knockout_ratio2() const;
  public:
  void clear_knockout_ratio2();
  double knockout_ratio2() const;
  void set_knockout_ratio2(double value);
  private:
  double _internal_knockout_ratio2() const;
  void _internal_set_knockout_ratio2(double value);
  public:

  // optional double KnockIn_Ratio = 12;
  bool has_knockin_ratio() const;
  private:
  bool _internal_has_knockin_ratio() const;
  public:
  void clear_knockin_ratio();
  double knockin_ratio() const;
  void set_knockin_ratio(double value);
  private:
  double _internal_knockin_ratio() const;
  void _internal_set_knockin_ratio(double value);
  public:

  // optional double KnockOut_Return = 13;
  bool has_knockout_return() const;
  private:
  bool _internal_has_knockout_return() const;
  public:
  void clear_knockout_return();
  double knockout_return() const;
  void set_knockout_return(double value);
  private:
  double _internal_knockout_return() const;
  void _internal_set_knockout_return(double value);
  public:

  // optional int32 Start_Obsv_Date = 14;
  bool has_start_obsv_date() const;
  private:
  bool _internal_has_start_obsv_date() const;
  public:
  void clear_start_obsv_date();
  ::PROTOBUF_NAMESPACE_ID::int32 start_obsv_date() const;
  void set_start_obsv_date(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start_obsv_date() const;
  void _internal_set_start_obsv_date(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 MC_Samples = 15;
  bool has_mc_samples() const;
  private:
  bool _internal_has_mc_samples() const;
  public:
  void clear_mc_samples();
  ::PROTOBUF_NAMESPACE_ID::int32 mc_samples() const;
  void set_mc_samples(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mc_samples() const;
  void _internal_set_mc_samples(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional double Barrier = 17;
  bool has_barrier() const;
  private:
  bool _internal_has_barrier() const;
  public:
  void clear_barrier();
  double barrier() const;
  void set_barrier(double value);
  private:
  double _internal_barrier() const;
  void _internal_set_barrier(double value);
  public:

  // optional bool IS_KnockIn = 16 [default = false];
  bool has_is_knockin() const;
  private:
  bool _internal_has_is_knockin() const;
  public:
  void clear_is_knockin();
  bool is_knockin() const;
  void set_is_knockin(bool value);
  private:
  bool _internal_is_knockin() const;
  void _internal_set_is_knockin(bool value);
  public:

  // optional .Proto.DevPricing.EnumBarrierType Barrier_Type = 18;
  bool has_barrier_type() const;
  private:
  bool _internal_has_barrier_type() const;
  public:
  void clear_barrier_type();
  ::Proto::DevPricing::EnumBarrierType barrier_type() const;
  void set_barrier_type(::Proto::DevPricing::EnumBarrierType value);
  private:
  ::Proto::DevPricing::EnumBarrierType _internal_barrier_type() const;
  void _internal_set_barrier_type(::Proto::DevPricing::EnumBarrierType value);
  public:

  // required int32 Year_Days = 2 [default = 252];
  bool has_year_days() const;
  private:
  bool _internal_has_year_days() const;
  public:
  void clear_year_days();
  ::PROTOBUF_NAMESPACE_ID::int32 year_days() const;
  void set_year_days(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_year_days() const;
  void _internal_set_year_days(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Proto.DevPricing.ProtoDevPricingReq)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int dev_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 duration_;
  double volatility_;
  double riskfree_rate_;
  double strike_;
  double s0_;
  double s1_;
  double expected_ret_;
  double knockout_ratio_;
  double knockout_ratio2_;
  double knockin_ratio_;
  double knockout_return_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_obsv_date_;
  ::PROTOBUF_NAMESPACE_ID::int32 mc_samples_;
  double barrier_;
  bool is_knockin_;
  int barrier_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 year_days_;
  friend struct ::TableStruct_ProtoDevPricing_2eproto;
};
// -------------------------------------------------------------------

class ProtoDevPricingRsp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Proto.DevPricing.ProtoDevPricingRsp) */ {
 public:
  inline ProtoDevPricingRsp() : ProtoDevPricingRsp(nullptr) {}
  ~ProtoDevPricingRsp() override;
  explicit constexpr ProtoDevPricingRsp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProtoDevPricingRsp(const ProtoDevPricingRsp& from);
  ProtoDevPricingRsp(ProtoDevPricingRsp&& from) noexcept
    : ProtoDevPricingRsp() {
    *this = ::std::move(from);
  }

  inline ProtoDevPricingRsp& operator=(const ProtoDevPricingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoDevPricingRsp& operator=(ProtoDevPricingRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtoDevPricingRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtoDevPricingRsp* internal_default_instance() {
    return reinterpret_cast<const ProtoDevPricingRsp*>(
               &_ProtoDevPricingRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProtoDevPricingRsp& a, ProtoDevPricingRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoDevPricingRsp* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoDevPricingRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoDevPricingRsp* New() const final {
    return new ProtoDevPricingRsp();
  }

  ProtoDevPricingRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoDevPricingRsp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProtoDevPricingRsp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ProtoDevPricingRsp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoDevPricingRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Proto.DevPricing.ProtoDevPricingRsp";
  }
  protected:
  explicit ProtoDevPricingRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kValueMaxFieldNumber = 3,
    kValueMinFieldNumber = 4,
    kAvgKnockoutMonthFieldNumber = 5,
    kDevTypeFieldNumber = 1,
  };
  // required double Value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  double value() const;
  void set_value(double value);
  private:
  double _internal_value() const;
  void _internal_set_value(double value);
  public:

  // optional double Value_Max = 3;
  bool has_value_max() const;
  private:
  bool _internal_has_value_max() const;
  public:
  void clear_value_max();
  double value_max() const;
  void set_value_max(double value);
  private:
  double _internal_value_max() const;
  void _internal_set_value_max(double value);
  public:

  // optional double Value_Min = 4;
  bool has_value_min() const;
  private:
  bool _internal_has_value_min() const;
  public:
  void clear_value_min();
  double value_min() const;
  void set_value_min(double value);
  private:
  double _internal_value_min() const;
  void _internal_set_value_min(double value);
  public:

  // optional double Avg_Knockout_Month = 5;
  bool has_avg_knockout_month() const;
  private:
  bool _internal_has_avg_knockout_month() const;
  public:
  void clear_avg_knockout_month();
  double avg_knockout_month() const;
  void set_avg_knockout_month(double value);
  private:
  double _internal_avg_knockout_month() const;
  void _internal_set_avg_knockout_month(double value);
  public:

  // required .Proto.DevPricing.EnumDevType Dev_Type = 1;
  bool has_dev_type() const;
  private:
  bool _internal_has_dev_type() const;
  public:
  void clear_dev_type();
  ::Proto::DevPricing::EnumDevType dev_type() const;
  void set_dev_type(::Proto::DevPricing::EnumDevType value);
  private:
  ::Proto::DevPricing::EnumDevType _internal_dev_type() const;
  void _internal_set_dev_type(::Proto::DevPricing::EnumDevType value);
  public:

  // @@protoc_insertion_point(class_scope:Proto.DevPricing.ProtoDevPricingRsp)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double value_;
  double value_max_;
  double value_min_;
  double avg_knockout_month_;
  int dev_type_;
  friend struct ::TableStruct_ProtoDevPricing_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoDevPricingReq

// required .Proto.DevPricing.EnumDevType Dev_Type = 1;
inline bool ProtoDevPricingReq::_internal_has_dev_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_dev_type() const {
  return _internal_has_dev_type();
}
inline void ProtoDevPricingReq::clear_dev_type() {
  dev_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::Proto::DevPricing::EnumDevType ProtoDevPricingReq::_internal_dev_type() const {
  return static_cast< ::Proto::DevPricing::EnumDevType >(dev_type_);
}
inline ::Proto::DevPricing::EnumDevType ProtoDevPricingReq::dev_type() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Dev_Type)
  return _internal_dev_type();
}
inline void ProtoDevPricingReq::_internal_set_dev_type(::Proto::DevPricing::EnumDevType value) {
  assert(::Proto::DevPricing::EnumDevType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  dev_type_ = value;
}
inline void ProtoDevPricingReq::set_dev_type(::Proto::DevPricing::EnumDevType value) {
  _internal_set_dev_type(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Dev_Type)
}

// required int32 Year_Days = 2 [default = 252];
inline bool ProtoDevPricingReq::_internal_has_year_days() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_year_days() const {
  return _internal_has_year_days();
}
inline void ProtoDevPricingReq::clear_year_days() {
  year_days_ = 252;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoDevPricingReq::_internal_year_days() const {
  return year_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoDevPricingReq::year_days() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Year_Days)
  return _internal_year_days();
}
inline void ProtoDevPricingReq::_internal_set_year_days(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  year_days_ = value;
}
inline void ProtoDevPricingReq::set_year_days(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_year_days(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Year_Days)
}

// required int32 Duration = 3;
inline bool ProtoDevPricingReq::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_duration() const {
  return _internal_has_duration();
}
inline void ProtoDevPricingReq::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoDevPricingReq::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoDevPricingReq::duration() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Duration)
  return _internal_duration();
}
inline void ProtoDevPricingReq::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void ProtoDevPricingReq::set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Duration)
}

// required double Volatility = 4;
inline bool ProtoDevPricingReq::_internal_has_volatility() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_volatility() const {
  return _internal_has_volatility();
}
inline void ProtoDevPricingReq::clear_volatility() {
  volatility_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline double ProtoDevPricingReq::_internal_volatility() const {
  return volatility_;
}
inline double ProtoDevPricingReq::volatility() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Volatility)
  return _internal_volatility();
}
inline void ProtoDevPricingReq::_internal_set_volatility(double value) {
  _has_bits_[0] |= 0x00000004u;
  volatility_ = value;
}
inline void ProtoDevPricingReq::set_volatility(double value) {
  _internal_set_volatility(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Volatility)
}

// required double RiskFree_Rate = 5;
inline bool ProtoDevPricingReq::_internal_has_riskfree_rate() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_riskfree_rate() const {
  return _internal_has_riskfree_rate();
}
inline void ProtoDevPricingReq::clear_riskfree_rate() {
  riskfree_rate_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double ProtoDevPricingReq::_internal_riskfree_rate() const {
  return riskfree_rate_;
}
inline double ProtoDevPricingReq::riskfree_rate() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.RiskFree_Rate)
  return _internal_riskfree_rate();
}
inline void ProtoDevPricingReq::_internal_set_riskfree_rate(double value) {
  _has_bits_[0] |= 0x00000008u;
  riskfree_rate_ = value;
}
inline void ProtoDevPricingReq::set_riskfree_rate(double value) {
  _internal_set_riskfree_rate(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.RiskFree_Rate)
}

// optional double Strike = 6;
inline bool ProtoDevPricingReq::_internal_has_strike() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_strike() const {
  return _internal_has_strike();
}
inline void ProtoDevPricingReq::clear_strike() {
  strike_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double ProtoDevPricingReq::_internal_strike() const {
  return strike_;
}
inline double ProtoDevPricingReq::strike() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Strike)
  return _internal_strike();
}
inline void ProtoDevPricingReq::_internal_set_strike(double value) {
  _has_bits_[0] |= 0x00000010u;
  strike_ = value;
}
inline void ProtoDevPricingReq::set_strike(double value) {
  _internal_set_strike(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Strike)
}

// optional double S0 = 7;
inline bool ProtoDevPricingReq::_internal_has_s0() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_s0() const {
  return _internal_has_s0();
}
inline void ProtoDevPricingReq::clear_s0() {
  s0_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline double ProtoDevPricingReq::_internal_s0() const {
  return s0_;
}
inline double ProtoDevPricingReq::s0() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.S0)
  return _internal_s0();
}
inline void ProtoDevPricingReq::_internal_set_s0(double value) {
  _has_bits_[0] |= 0x00000020u;
  s0_ = value;
}
inline void ProtoDevPricingReq::set_s0(double value) {
  _internal_set_s0(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.S0)
}

// optional double S1 = 8;
inline bool ProtoDevPricingReq::_internal_has_s1() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_s1() const {
  return _internal_has_s1();
}
inline void ProtoDevPricingReq::clear_s1() {
  s1_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline double ProtoDevPricingReq::_internal_s1() const {
  return s1_;
}
inline double ProtoDevPricingReq::s1() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.S1)
  return _internal_s1();
}
inline void ProtoDevPricingReq::_internal_set_s1(double value) {
  _has_bits_[0] |= 0x00000040u;
  s1_ = value;
}
inline void ProtoDevPricingReq::set_s1(double value) {
  _internal_set_s1(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.S1)
}

// optional double Expected_Ret = 9;
inline bool ProtoDevPricingReq::_internal_has_expected_ret() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_expected_ret() const {
  return _internal_has_expected_ret();
}
inline void ProtoDevPricingReq::clear_expected_ret() {
  expected_ret_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double ProtoDevPricingReq::_internal_expected_ret() const {
  return expected_ret_;
}
inline double ProtoDevPricingReq::expected_ret() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Expected_Ret)
  return _internal_expected_ret();
}
inline void ProtoDevPricingReq::_internal_set_expected_ret(double value) {
  _has_bits_[0] |= 0x00000080u;
  expected_ret_ = value;
}
inline void ProtoDevPricingReq::set_expected_ret(double value) {
  _internal_set_expected_ret(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Expected_Ret)
}

// optional double KnockOut_Ratio = 10;
inline bool ProtoDevPricingReq::_internal_has_knockout_ratio() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_knockout_ratio() const {
  return _internal_has_knockout_ratio();
}
inline void ProtoDevPricingReq::clear_knockout_ratio() {
  knockout_ratio_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double ProtoDevPricingReq::_internal_knockout_ratio() const {
  return knockout_ratio_;
}
inline double ProtoDevPricingReq::knockout_ratio() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.KnockOut_Ratio)
  return _internal_knockout_ratio();
}
inline void ProtoDevPricingReq::_internal_set_knockout_ratio(double value) {
  _has_bits_[0] |= 0x00000100u;
  knockout_ratio_ = value;
}
inline void ProtoDevPricingReq::set_knockout_ratio(double value) {
  _internal_set_knockout_ratio(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.KnockOut_Ratio)
}

// optional double KnockOut_Ratio2 = 11;
inline bool ProtoDevPricingReq::_internal_has_knockout_ratio2() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_knockout_ratio2() const {
  return _internal_has_knockout_ratio2();
}
inline void ProtoDevPricingReq::clear_knockout_ratio2() {
  knockout_ratio2_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double ProtoDevPricingReq::_internal_knockout_ratio2() const {
  return knockout_ratio2_;
}
inline double ProtoDevPricingReq::knockout_ratio2() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.KnockOut_Ratio2)
  return _internal_knockout_ratio2();
}
inline void ProtoDevPricingReq::_internal_set_knockout_ratio2(double value) {
  _has_bits_[0] |= 0x00000200u;
  knockout_ratio2_ = value;
}
inline void ProtoDevPricingReq::set_knockout_ratio2(double value) {
  _internal_set_knockout_ratio2(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.KnockOut_Ratio2)
}

// optional double KnockIn_Ratio = 12;
inline bool ProtoDevPricingReq::_internal_has_knockin_ratio() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_knockin_ratio() const {
  return _internal_has_knockin_ratio();
}
inline void ProtoDevPricingReq::clear_knockin_ratio() {
  knockin_ratio_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline double ProtoDevPricingReq::_internal_knockin_ratio() const {
  return knockin_ratio_;
}
inline double ProtoDevPricingReq::knockin_ratio() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.KnockIn_Ratio)
  return _internal_knockin_ratio();
}
inline void ProtoDevPricingReq::_internal_set_knockin_ratio(double value) {
  _has_bits_[0] |= 0x00000400u;
  knockin_ratio_ = value;
}
inline void ProtoDevPricingReq::set_knockin_ratio(double value) {
  _internal_set_knockin_ratio(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.KnockIn_Ratio)
}

// optional double KnockOut_Return = 13;
inline bool ProtoDevPricingReq::_internal_has_knockout_return() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_knockout_return() const {
  return _internal_has_knockout_return();
}
inline void ProtoDevPricingReq::clear_knockout_return() {
  knockout_return_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline double ProtoDevPricingReq::_internal_knockout_return() const {
  return knockout_return_;
}
inline double ProtoDevPricingReq::knockout_return() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.KnockOut_Return)
  return _internal_knockout_return();
}
inline void ProtoDevPricingReq::_internal_set_knockout_return(double value) {
  _has_bits_[0] |= 0x00000800u;
  knockout_return_ = value;
}
inline void ProtoDevPricingReq::set_knockout_return(double value) {
  _internal_set_knockout_return(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.KnockOut_Return)
}

// optional int32 Start_Obsv_Date = 14;
inline bool ProtoDevPricingReq::_internal_has_start_obsv_date() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_start_obsv_date() const {
  return _internal_has_start_obsv_date();
}
inline void ProtoDevPricingReq::clear_start_obsv_date() {
  start_obsv_date_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoDevPricingReq::_internal_start_obsv_date() const {
  return start_obsv_date_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoDevPricingReq::start_obsv_date() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Start_Obsv_Date)
  return _internal_start_obsv_date();
}
inline void ProtoDevPricingReq::_internal_set_start_obsv_date(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  start_obsv_date_ = value;
}
inline void ProtoDevPricingReq::set_start_obsv_date(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start_obsv_date(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Start_Obsv_Date)
}

// optional int32 MC_Samples = 15;
inline bool ProtoDevPricingReq::_internal_has_mc_samples() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_mc_samples() const {
  return _internal_has_mc_samples();
}
inline void ProtoDevPricingReq::clear_mc_samples() {
  mc_samples_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoDevPricingReq::_internal_mc_samples() const {
  return mc_samples_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoDevPricingReq::mc_samples() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.MC_Samples)
  return _internal_mc_samples();
}
inline void ProtoDevPricingReq::_internal_set_mc_samples(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  mc_samples_ = value;
}
inline void ProtoDevPricingReq::set_mc_samples(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mc_samples(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.MC_Samples)
}

// optional bool IS_KnockIn = 16 [default = false];
inline bool ProtoDevPricingReq::_internal_has_is_knockin() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_is_knockin() const {
  return _internal_has_is_knockin();
}
inline void ProtoDevPricingReq::clear_is_knockin() {
  is_knockin_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool ProtoDevPricingReq::_internal_is_knockin() const {
  return is_knockin_;
}
inline bool ProtoDevPricingReq::is_knockin() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.IS_KnockIn)
  return _internal_is_knockin();
}
inline void ProtoDevPricingReq::_internal_set_is_knockin(bool value) {
  _has_bits_[0] |= 0x00008000u;
  is_knockin_ = value;
}
inline void ProtoDevPricingReq::set_is_knockin(bool value) {
  _internal_set_is_knockin(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.IS_KnockIn)
}

// optional double Barrier = 17;
inline bool ProtoDevPricingReq::_internal_has_barrier() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_barrier() const {
  return _internal_has_barrier();
}
inline void ProtoDevPricingReq::clear_barrier() {
  barrier_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline double ProtoDevPricingReq::_internal_barrier() const {
  return barrier_;
}
inline double ProtoDevPricingReq::barrier() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Barrier)
  return _internal_barrier();
}
inline void ProtoDevPricingReq::_internal_set_barrier(double value) {
  _has_bits_[0] |= 0x00004000u;
  barrier_ = value;
}
inline void ProtoDevPricingReq::set_barrier(double value) {
  _internal_set_barrier(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Barrier)
}

// optional .Proto.DevPricing.EnumBarrierType Barrier_Type = 18;
inline bool ProtoDevPricingReq::_internal_has_barrier_type() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool ProtoDevPricingReq::has_barrier_type() const {
  return _internal_has_barrier_type();
}
inline void ProtoDevPricingReq::clear_barrier_type() {
  barrier_type_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::Proto::DevPricing::EnumBarrierType ProtoDevPricingReq::_internal_barrier_type() const {
  return static_cast< ::Proto::DevPricing::EnumBarrierType >(barrier_type_);
}
inline ::Proto::DevPricing::EnumBarrierType ProtoDevPricingReq::barrier_type() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingReq.Barrier_Type)
  return _internal_barrier_type();
}
inline void ProtoDevPricingReq::_internal_set_barrier_type(::Proto::DevPricing::EnumBarrierType value) {
  assert(::Proto::DevPricing::EnumBarrierType_IsValid(value));
  _has_bits_[0] |= 0x00010000u;
  barrier_type_ = value;
}
inline void ProtoDevPricingReq::set_barrier_type(::Proto::DevPricing::EnumBarrierType value) {
  _internal_set_barrier_type(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingReq.Barrier_Type)
}

// -------------------------------------------------------------------

// ProtoDevPricingRsp

// required .Proto.DevPricing.EnumDevType Dev_Type = 1;
inline bool ProtoDevPricingRsp::_internal_has_dev_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoDevPricingRsp::has_dev_type() const {
  return _internal_has_dev_type();
}
inline void ProtoDevPricingRsp::clear_dev_type() {
  dev_type_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::Proto::DevPricing::EnumDevType ProtoDevPricingRsp::_internal_dev_type() const {
  return static_cast< ::Proto::DevPricing::EnumDevType >(dev_type_);
}
inline ::Proto::DevPricing::EnumDevType ProtoDevPricingRsp::dev_type() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingRsp.Dev_Type)
  return _internal_dev_type();
}
inline void ProtoDevPricingRsp::_internal_set_dev_type(::Proto::DevPricing::EnumDevType value) {
  assert(::Proto::DevPricing::EnumDevType_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  dev_type_ = value;
}
inline void ProtoDevPricingRsp::set_dev_type(::Proto::DevPricing::EnumDevType value) {
  _internal_set_dev_type(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingRsp.Dev_Type)
}

// required double Value = 2;
inline bool ProtoDevPricingRsp::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoDevPricingRsp::has_value() const {
  return _internal_has_value();
}
inline void ProtoDevPricingRsp::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double ProtoDevPricingRsp::_internal_value() const {
  return value_;
}
inline double ProtoDevPricingRsp::value() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingRsp.Value)
  return _internal_value();
}
inline void ProtoDevPricingRsp::_internal_set_value(double value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void ProtoDevPricingRsp::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingRsp.Value)
}

// optional double Value_Max = 3;
inline bool ProtoDevPricingRsp::_internal_has_value_max() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoDevPricingRsp::has_value_max() const {
  return _internal_has_value_max();
}
inline void ProtoDevPricingRsp::clear_value_max() {
  value_max_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double ProtoDevPricingRsp::_internal_value_max() const {
  return value_max_;
}
inline double ProtoDevPricingRsp::value_max() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingRsp.Value_Max)
  return _internal_value_max();
}
inline void ProtoDevPricingRsp::_internal_set_value_max(double value) {
  _has_bits_[0] |= 0x00000002u;
  value_max_ = value;
}
inline void ProtoDevPricingRsp::set_value_max(double value) {
  _internal_set_value_max(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingRsp.Value_Max)
}

// optional double Value_Min = 4;
inline bool ProtoDevPricingRsp::_internal_has_value_min() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoDevPricingRsp::has_value_min() const {
  return _internal_has_value_min();
}
inline void ProtoDevPricingRsp::clear_value_min() {
  value_min_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline double ProtoDevPricingRsp::_internal_value_min() const {
  return value_min_;
}
inline double ProtoDevPricingRsp::value_min() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingRsp.Value_Min)
  return _internal_value_min();
}
inline void ProtoDevPricingRsp::_internal_set_value_min(double value) {
  _has_bits_[0] |= 0x00000004u;
  value_min_ = value;
}
inline void ProtoDevPricingRsp::set_value_min(double value) {
  _internal_set_value_min(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingRsp.Value_Min)
}

// optional double Avg_Knockout_Month = 5;
inline bool ProtoDevPricingRsp::_internal_has_avg_knockout_month() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoDevPricingRsp::has_avg_knockout_month() const {
  return _internal_has_avg_knockout_month();
}
inline void ProtoDevPricingRsp::clear_avg_knockout_month() {
  avg_knockout_month_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double ProtoDevPricingRsp::_internal_avg_knockout_month() const {
  return avg_knockout_month_;
}
inline double ProtoDevPricingRsp::avg_knockout_month() const {
  // @@protoc_insertion_point(field_get:Proto.DevPricing.ProtoDevPricingRsp.Avg_Knockout_Month)
  return _internal_avg_knockout_month();
}
inline void ProtoDevPricingRsp::_internal_set_avg_knockout_month(double value) {
  _has_bits_[0] |= 0x00000008u;
  avg_knockout_month_ = value;
}
inline void ProtoDevPricingRsp::set_avg_knockout_month(double value) {
  _internal_set_avg_knockout_month(value);
  // @@protoc_insertion_point(field_set:Proto.DevPricing.ProtoDevPricingRsp.Avg_Knockout_Month)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace DevPricing
}  // namespace Proto

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Proto::DevPricing::EnumDevType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Proto::DevPricing::EnumDevType>() {
  return ::Proto::DevPricing::EnumDevType_descriptor();
}
template <> struct is_proto_enum< ::Proto::DevPricing::EnumBarrierType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Proto::DevPricing::EnumBarrierType>() {
  return ::Proto::DevPricing::EnumBarrierType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProtoDevPricing_2eproto
