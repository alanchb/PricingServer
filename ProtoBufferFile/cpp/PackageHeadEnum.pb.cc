// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PackageHeadEnum.proto

#include "stdafx.h"
#include "PackageHeadEnum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Proto {
namespace Package {
}  // namespace Package
}  // namespace Proto
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_PackageHeadEnum_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_PackageHeadEnum_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_PackageHeadEnum_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_PackageHeadEnum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025PackageHeadEnum.proto\022\rProto.Package*X"
  "\n\013PackageType\022\013\n\007Request\020\001\022\t\n\005Reply\020\002\022\020\n"
  "\014AsnycRequest\020\003\022\016\n\nAsnycReply\020\004\022\017\n\013PushM"
  "essage\020\005*\335\013\n\014FunctionCode\022\016\n\nPlaceOrder\020"
  "\001\022\017\n\013DeleteOrder\020\002\022\016\n\nDevPricing\020\n\022\024\n\020Qu"
  "eryProjectInfo\020e\022\022\n\016QueryStockInfo\020f\022\023\n\017"
  "QueryFutureInfo\020g\022\027\n\023QueryStockOrderInfo"
  "\020h\022\027\n\023QueryStockKnockInfo\020i\022\030\n\024QueryStoc"
  "kCancelInfo\020j\022\032\n\026QueryStockPositionInfo\020"
  "k\022\031\n\025QueryStockAccountInfo\020l\022\025\n\021QueryFut"
  "OrderInfo\020m\022\025\n\021QueryFutKnockInfo\020n\022\026\n\022Qu"
  "eryFutCancelInfo\020o\022\030\n\024QueryFutPositionIn"
  "fo\020p\022\027\n\023QueryFutAccountInfo\020q\022\027\n\023QueryMi"
  "niteLineInfo\020r\022\024\n\020QueryDayLineInfo\020s\022&\n\""
  "QueryFutureMarginRateAndCommission\020t\022\026\n\022"
  "QueryQtsProductNav\020u\022\033\n\027QueryIndexCompon"
  "entInfo\020v\022\022\n\016StockPreSettle\020w\022\035\n\031QuerySt"
  "ockPreSettleResult\020x\022\034\n\030StockReckonTradi"
  "ngLogImp\020y\022\031\n\025StockReckonAccountImp\020z\022\031\n"
  "\025StockReckonStklistImp\020{\022\036\n\032StockReckonA"
  "ndResultReturn\020|\022\025\n\021ComputeProductNav\020}\022"
  "\027\n\023QueryQuotationTicks\020~\022\017\n\013TestFunc127\020"
  "\177\022\017\n\nGetSysInfo\020\200\001\022\025\n\020QueryNeedStkInfo\020\201"
  "\001\022\023\n\016QueryWhiteList\020\202\001\022\023\n\016QueryBlackList"
  "\020\203\001\022\027\n\022RefreshPrjPosition\020\204\001\022\020\n\013OMSOptLo"
  "gin\020\205\001\022\021\n\014QueryLOFInfo\020\206\001\022\023\n\016QueryUnProc"
  "ess\020\207\001\022\032\n\025RestrictListMaintance\020\210\001\022\025\n\020Re"
  "questTradeInfo\020\211\001\022\037\n\032QueryDayLineInfoFro"
  "mCiccDC\020\212\001\022\024\n\017QueryOptionInfo\020\213\001\022\032\n\025Quer"
  "yFutureETFArbPara\020\310\001\022\017\n\nPauseTrade\020\364\003\022\022\n"
  "\rContinueTrade\020\365\003\022\r\n\010SimuPara\020\250F\022\022\n\rTest"
  "Func16351\020\337\177\022\022\n\rTestFunc16352\020\340\177\022\022\n\rTest"
  "Func16353\020\341\177\022\022\n\rTestFunc16354\020\342\177\022\022\n\rTest"
  "Func16355\020\343\177\022\022\n\rTestFunc16356\020\344\177\022\022\n\rTest"
  "Func16357\020\345\177\022\022\n\rTestFunc16358\020\346\177\022\022\n\rTest"
  "Func16359\020\347\177\022\022\n\rTestFunc16360\020\350\177\022\022\n\rTest"
  "Func16361\020\351\177\022\022\n\rTestFunc16362\020\352\177\022\022\n\rTest"
  "Func16363\020\353\177\022\022\n\rTestFunc16364\020\354\177\022\022\n\rTest"
  "Func16365\020\355\177\022\022\n\rTestFunc16366\020\356\177\022\022\n\rTest"
  "Func16367\020\357\177\022\022\n\rTestFunc16368\020\360\177\022\022\n\rTest"
  "Func16369\020\361\177\022\022\n\rTestFunc16370\020\362\177B#\n\017com."
  "cc.protobufB\020PackageHeadEnums"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_PackageHeadEnum_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_PackageHeadEnum_2eproto = {
  false, false, 1669, descriptor_table_protodef_PackageHeadEnum_2eproto, "PackageHeadEnum.proto", 
  &descriptor_table_PackageHeadEnum_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_PackageHeadEnum_2eproto::offsets,
  nullptr, file_level_enum_descriptors_PackageHeadEnum_2eproto, file_level_service_descriptors_PackageHeadEnum_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_PackageHeadEnum_2eproto_getter() {
  return &descriptor_table_PackageHeadEnum_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_PackageHeadEnum_2eproto(&descriptor_table_PackageHeadEnum_2eproto);
namespace Proto {
namespace Package {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PackageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_PackageHeadEnum_2eproto);
  return file_level_enum_descriptors_PackageHeadEnum_2eproto[0];
}
bool PackageType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FunctionCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_PackageHeadEnum_2eproto);
  return file_level_enum_descriptors_PackageHeadEnum_2eproto[1];
}
bool FunctionCode_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 10:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 200:
    case 500:
    case 501:
    case 9000:
    case 16351:
    case 16352:
    case 16353:
    case 16354:
    case 16355:
    case 16356:
    case 16357:
    case 16358:
    case 16359:
    case 16360:
    case 16361:
    case 16362:
    case 16363:
    case 16364:
    case 16365:
    case 16366:
    case 16367:
    case 16368:
    case 16369:
    case 16370:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Package
}  // namespace Proto
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
